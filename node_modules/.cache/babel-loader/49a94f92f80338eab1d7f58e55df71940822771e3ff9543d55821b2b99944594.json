{"ast":null,"code":"var _jsxFileName = \"/home/madard/react-apps/my-app/src/components/counter.jsx\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    // property of component, and its object that hold all data that component needs\n    // and it can be object inside another object (all data )\n    this.state = {\n      count: 0,\n      // ImageUrl: 'https://picsum.photos/200'\n      tags: []\n    };\n  }\n  // adding style using style object\n  // style = {\n  //     fontSize: 20,\n  //     fontWeight: 'bold',\n  //     color : 'blue'\n  // };\n\n  //helper method\n  renderTags() {\n    if (this.state.tags.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There is no tags!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 50\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.state.tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: tag\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 48\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this); // each item should have uniqeu id to react know which item deleted or updated\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Counter Component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), \"  \", \" \", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.getBadgetClass(),\n        children: this.counterDisplay()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        children: \"INCREMENT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n  counterDisplay() {\n    // return this.state.count == 0 ?  \"zero\" : this.state.count \n    // easy way peek or extract count from this state\n    // and store constant count variable\n    const {\n      count\n    } = this.state;\n    return count === 0 ? \"zero\" : count;\n  }\n\n  // rendering classes dynamically\n  getBadgetClass() {\n    let classes = \"badge m-2 text-bg-\"; // stored main classes, that not changed with conditions\n    classes += this.state.count === 0 ? \"warning\" : \"primary\"; // changed class with condition\n    return classes;\n  }\n}\nexport default Counter;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Fragment","_Fragment","Counter","constructor","args","state","count","tags","renderTags","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","tag","render","className","getBadgetClass","counterDisplay","classes"],"sources":["/home/madard/react-apps/my-app/src/components/counter.jsx"],"sourcesContent":["import React from \"react\";\nimport { Component } from \"react\";\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass Counter extends Component{\n    // property of component, and its object that hold all data that component needs\n    // and it can be object inside another object (all data )\n\n    state = {\n        count: 0,\n        // ImageUrl: 'https://picsum.photos/200'\n        tags : []\n    };\n    // adding style using style object\n    // style = {\n    //     fontSize: 20,\n    //     fontWeight: 'bold',\n    //     color : 'blue'\n    // };\n\n    //helper method\n    renderTags(){\n        if (this.state.tags.length === 0) return <p>There is no tags!</p>;\n        return <ul>{this.state.tags.map(tag => <li key={tag}>{tag}</li>)}</ul> // each item should have uniqeu id to react know which item deleted or updated\n        \n    }\n    render(){\n        \n        return(\n            <>\n            <h1>Counter Component</h1>\n            {/* Adding attribute source value dynamically */}\n            {/* <img src={this.state.ImageUrl} alt=\"\" /> */}\n\n            {/* applaying class attribute (className) */}\n            {/* applying style object to style attribute using jsx expressions */}\n            {/* <span style={this.style } className=\"badge badge-primary\">{this.counterDisplay()}</span> */}\n\n            {/* OR apply inline style */}\n            {/* <span style={{fontSize: 30, color: 'blueviolet'} } className=\"badge badge-primary\">{this.counterDisplay()}</span> */}\n\n            {/* rendering classes dynamically */}\n            {/* <span className={this.getBadgetClass()}>{this.counterDisplay()}</span>\n            <button className=\"btn btn-secondary btn-sm\">INCREMENT</button> */}\n\n            {/* <ul> */}\n               {/* {this.state.tags.map(tag => <li key={tag}>{tag}</li>)}*/}  {/* each item should have uniqeu id to react know which item deleted or updated */}\n            {/* </ul> */}\n\n            {/* CONDITIONAL RENDERING */}\n            {/*{this.state.tags.length === 0 && <p>Please create tage</p>}*/} {/* if first statement will display second statement else nothing, if you add third statement, and privous two statements are two third will display and so on */}\n            {/*{this.state.count === 0 ?  <p>no value</p> : this.state.count}*/} {/* its like if and else. if statement is true display what after ? else what after :*/}\n            {/* {this.renderTags()} */}\n\n            <span className={this.getBadgetClass()}>{this.counterDisplay()}</span>\n            <button className=\"btn btn-secondary btn-sm\">INCREMENT</button>\n            </>\n\n        );\n    \n    }\n    counterDisplay() {\n        // return this.state.count == 0 ?  \"zero\" : this.state.count \n        // easy way peek or extract count from this state\n        // and store constant count variable\n        const {count} = this.state;\n        return count === 0 ?  \"zero\" : count;\n\n    }\n\n    // rendering classes dynamically\n    getBadgetClass(){\n        let classes = \"badge m-2 text-bg-\"; // stored main classes, that not changed with conditions\n        classes += (this.state.count === 0) ? \"warning\" : \"primary\"; // changed class with condition\n        return classes;\n    }\n}   \n\n\n\nexport default Counter;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AAEjC,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,OAAO,SAASL,SAAS;EAAAM,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAC3B;IACA;IAAA,KAEAC,KAAK,GAAG;MACJC,KAAK,EAAE,CAAC;MACR;MACAC,IAAI,EAAG;IACX,CAAC;EAAA;EACD;EACA;EACA;EACA;EACA;EACA;;EAEA;EACAC,UAAUA,CAAA,EAAE;IACR,IAAI,IAAI,CAACH,KAAK,CAACE,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE,oBAAOV,OAAA;MAAAW,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;IACjE,oBAAOf,OAAA;MAAAW,QAAA,EAAK,IAAI,CAACL,KAAK,CAACE,IAAI,CAACQ,GAAG,CAACC,GAAG,iBAAIjB,OAAA;QAAAW,QAAA,EAAeM;MAAG,GAATA,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAAC;EAE3E;EACAG,MAAMA,CAAA,EAAE;IAEJ,oBACIlB,OAAA,CAAAE,SAAA;MAAAS,QAAA,gBACAX,OAAA;QAAAW,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAgBsC,IAAE,EAID,GAAC,EACE,GAAC,eAGrEf,OAAA;QAAMmB,SAAS,EAAE,IAAI,CAACC,cAAc,CAAC,CAAE;QAAAT,QAAA,EAAE,IAAI,CAACU,cAAc,CAAC;MAAC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtEf,OAAA;QAAQmB,SAAS,EAAC,0BAA0B;QAAAR,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC7D,CAAC;EAIX;EACAM,cAAcA,CAAA,EAAG;IACb;IACA;IACA;IACA,MAAM;MAACd;IAAK,CAAC,GAAG,IAAI,CAACD,KAAK;IAC1B,OAAOC,KAAK,KAAK,CAAC,GAAI,MAAM,GAAGA,KAAK;EAExC;;EAEA;EACAa,cAAcA,CAAA,EAAE;IACZ,IAAIE,OAAO,GAAG,oBAAoB,CAAC,CAAC;IACpCA,OAAO,IAAK,IAAI,CAAChB,KAAK,CAACC,KAAK,KAAK,CAAC,GAAI,SAAS,GAAG,SAAS,CAAC,CAAC;IAC7D,OAAOe,OAAO;EAClB;AACJ;AAIA,eAAenB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}